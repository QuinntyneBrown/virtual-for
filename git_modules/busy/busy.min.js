angular.module("busy", []).config(["$httpProvider", function (t) { t.interceptors.push("requestCounter") }]); var Busy; !function (t) { "use strict"; var e = function () { function t(t) { var e = this; this.requestCounter = t, this.restrict = "EAC", this.transclude = !0, this.scope = {}, this.template = "<ng-transclude data-ng-show='requestCount'></ng-transclude>", this.link = function (t) { t.$watch(function () { e.requestCounter.getRequestCount() }, function (e) { t.requestCount = e }) } } return t.createInstance = function (e) { return new t(e) }, t }(); t.WorkSpinner = e, angular.module("busy").directive("workSpinner", ["requestCounter", e.createInstance]) }(Busy || (Busy = {})); var Busy; !function (t) { "use strict"; var e = function () { function t(t) { var e = this; this.$q = t, this.requests = 0, this.request = function (t) { return e.requests += 1, e.$q.when(t) }, this.requestError = function (t) { return e.requests -= 1, e.$q.reject(t) }, this.response = function (t) { return e.requests -= 1, e.$q.when(t) }, this.responseError = function (t) { return e.requests -= 1, e.$q.reject(t) }, this.getRequestCount = function () { return e.requests } } return t.createInstance = function (e) { return new t(e) }, t }(); t.RequestCounter = e, angular.module("busy").factory("requestCounter", ["$q", e.createInstance]) }(Busy || (Busy = {}));