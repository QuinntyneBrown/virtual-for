{"version":3,"sources":["functions/getRenderedNodesComputedInfo.ts"],"names":["VirtualIndexedListView"],"mappings":"AAAA,yDAAyD;AAEzD,IAAO,sBAAsB,CAsC5B;AAtCD,WAAO,sBAAsB,EAAC,CAAC;IAE3BA,YAAYA,CAACA;IAEbA,IAAIA,4BAA4BA,GAAGA,UAACA,OAAYA;QAE5CA,IAAIA,YAAYA,GAAUA,EAAEA,CAACA;QAE7BA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,OAAOA,CAACA,aAAaA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;YAEpDA,IAAIA,CAACA,GAAGA,OAAOA,CAACA,IAAIA,CAACA,OAAOA,CAACA,aAAaA,CAACA,CAACA,CAACA,CAACA,CAACA;YAE/CA,IAAIA,SAASA,GAAGA,OAAOA,CAACA,aAAaA,CAACA,CAACA,CAACA,CAACA,SAASA,CAACA;YAEnDA,IAAIA,UAAUA,GAAGA,OAAOA,CAACA,UAAUA,CAACA;YAEpCA,YAAYA,CAACA,IAAIA,CAACA;gBACdA,GAAGA,EAAEA,CAACA,GAAGA,SAASA;gBAClBA,MAAMA,EAAEA,CAACA,GAAGA,SAASA,GAAGA,UAAUA;gBAClCA,KAAKA,EAAQA,OAAOA,CAACA,OAAOA,CAACA,OAAOA,CAACA,aAAaA,CAACA,CAACA,CAACA,CAACA,CAACA,KAAKA,EAAGA,CAACA,OAAOA;gBACvEA,IAAIA,EAAEA,OAAOA,CAACA,aAAaA,CAACA,CAACA,CAACA;aACjCA,CAACA,CAACA;QACPA,CAACA;QAEDA,EAAEA,CAACA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA,CAACA;YACfA,YAAYA,CAACA,IAAIA,CAACA,UAACA,CAAMA,EAAEA,CAAMA;gBAC7BA,MAAMA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,GAAGA,CAACA;YACzBA,CAACA,CAACA,CAACA;QACPA,CAACA;QAACA,IAAIA,CAACA,CAACA;YACJA,YAAYA,CAACA,IAAIA,CAACA,UAACA,CAAMA,EAAEA,CAAMA;gBAC7BA,MAAMA,CAACA,CAACA,CAACA,GAAGA,GAAGA,CAACA,CAACA,GAAGA,CAACA;YACzBA,CAACA,CAACA,CAACA;QACPA,CAACA;QAEDA,MAAMA,CAACA,YAAYA,CAACA;IACxBA,CAACA,CAAAA;IAEDA,OAAOA,CAACA,MAAMA,CAACA,wBAAwBA,CAACA,CAACA,KAAKA,CAACA,qDAAqDA,EAAEA,4BAA4BA,CAACA,CAACA;AACxIA,CAACA,EAtCM,sBAAsB,KAAtB,sBAAsB,QAsC5B","file":"functions/getRenderedNodesComputedInfo.js","sourcesContent":["/// <reference path=\"../../typings/typescriptapp.d.ts\" />\r\n\r\nmodule VirtualIndexedListView {\r\n\r\n    \"use strict\";\r\n\r\n    var getRenderedNodesComputedInfo = (options: any): any[] => {\r\n\r\n        var computedInfo: any[] = [];\r\n\r\n        for (var i = 0; i < options.renderedNodes.length; i++) {\r\n\r\n            var y = options.getY(options.renderedNodes[i]);\r\n\r\n            var offsetTop = options.renderedNodes[i].offsetTop;\r\n\r\n            var itemHeight = options.itemHeight;\r\n\r\n            computedInfo.push({\r\n                top: y + offsetTop,\r\n                bottom: y + offsetTop + itemHeight,\r\n                index: (<any>angular.element(options.renderedNodes[i]).scope()).$$index,\r\n                node: options.renderedNodes[i]\r\n            });\r\n        }\r\n\r\n        if (options.desc) {\r\n            computedInfo.sort((a: any, b: any) => {\r\n                return b.top - a.top;\r\n            });\r\n        } else {\r\n            computedInfo.sort((a: any, b: any) => {\r\n                return a.top - b.top;\r\n            });\r\n        }\r\n\r\n        return computedInfo;\r\n    }\r\n\r\n    angular.module(\"virtualIndexedListView\").value(\"virtualIndexedListView.getRenderedNodesComputedInfo\", getRenderedNodesComputedInfo);\r\n} "],"sourceRoot":"/source/"}