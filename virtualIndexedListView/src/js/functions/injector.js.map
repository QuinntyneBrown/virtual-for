{"version":3,"sources":["functions/injector.ts"],"names":["VirtualIndexedListView","VirtualIndexedListView.Injector","VirtualIndexedListView.Injector.constructor"],"mappings":"AAAA,yDAAyD;AAEzD,IAAO,sBAAsB,CAuC5B;AAvCD,WAAO,sBAAsB,EAAC,CAAC;IAE3BA,YAAYA,CAACA;IAEbA;QAEIC,kBAAoBA,SAAmCA;YAF3DC,iBAgCCA;YA9BuBA,cAASA,GAATA,SAASA,CAA0BA;YAIhDA,QAAGA,GAAGA,UAACA,OAAYA;gBAEtBA,MAAMA,CAAAA,CAACA,OAAOA,CAACA,SAASA,CAACA,CAACA,CAACA;oBAEvBA,KAAKA,oBAAoBA;wBACrBA,EAAEA,CAACA,CAACA,OAAOA,CAACA,gBAAgBA,IAAIA,OAAOA,CAACA,qBAAqBA,CAACA,CAACA,CAACA;4BAC5DA,MAAMA,CAAgCA,KAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,oDAAoDA,CAAEA,CAACA,cAAcA,CAACA,EAAEA,KAAKA,EAAEA,OAAOA,CAACA,KAAKA,EAAEA,KAAKA,EAAEA,OAAOA,CAACA,KAAKA,EAAEA,qBAAqBA,EAAEA,OAAOA,CAACA,qBAAqBA,EAAEA,gBAAgBA,EAAEA,OAAOA,CAACA,gBAAgBA,EAAEA,CAACA,CAACA;wBACrRA,CAACA;wBAACA,IAAIA,CAACA,EAAEA,CAACA,CAACA,OAAOA,CAACA,WAAWA,CAACA,CAACA,CAACA;4BAC7BA,MAAMA,CAA8BA,KAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,kDAAkDA,CAAEA,CAACA,cAAcA,CAACA,EAAEA,KAAKA,EAAEA,OAAOA,CAACA,KAAKA,EAAEA,WAAWA,EAAEA,OAAOA,CAACA,WAAWA,EAAEA,CAACA,CAACA;wBAC3LA,CAACA;wBAACA,IAAIA,CAACA,CAACA;4BACJA,MAAMA,CAAsBA,KAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,0CAA0CA,CAAEA,CAACA,cAAcA,CAACA,EAAEA,KAAKA,EAAEA,OAAOA,CAACA,KAAKA,EAAEA,CAACA,CAACA;wBACzIA,CAACA;oBAELA,KAAKA,WAAWA;wBACZA,MAAMA,CAAaA,KAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,iCAAiCA,CAAEA,CAACA,cAAcA,CAACA,EAAEA,OAAOA,EAAEA,OAAOA,CAACA,OAAOA,EAAEA,CAACA,CAACA;oBAE3HA,KAAKA,YAAYA;wBACbA,MAAMA,CAAcA,KAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,kCAAkCA,CAAEA,CAACA,cAAcA,CAACA,EAAEA,OAAOA,EAAEA,OAAOA,CAACA,OAAOA,EAAEA,CAACA,CAACA;oBAE7HA,KAAKA,gBAAgBA;wBACjBA,MAAMA,CAAkBA,KAAIA,CAACA,SAASA,CAACA,GAAGA,CAACA,sCAAsCA,CAAEA,CAACA,cAAcA,CAACA,EAAEA,SAASA,EAAEA,OAAOA,CAACA,SAASA,EAAEA,CAACA,CAACA;gBAG7IA,CAACA;YAELA,CAACA,CAAAA;QA3BDA,CAACA;QA4BLD,eAACA;IAADA,CAhCAD,AAgCCC,IAAAD;IAEDA,OAAOA,CAACA,MAAMA,CAACA,wBAAwBA,CAACA,CAACA,OAAOA,CAACA,iCAAiCA,EAAEA,CAACA,WAAWA,EAACA,QAAQA,CAACA,CAACA,CAACA;AAChHA,CAACA,EAvCM,sBAAsB,KAAtB,sBAAsB,QAuC5B","file":"functions/injector.js","sourcesContent":["/// <reference path=\"../../typings/typescriptapp.d.ts\" />\r\n\r\nmodule VirtualIndexedListView {\r\n\r\n    \"use strict\";\r\n\r\n    class Injector implements IInjector {\r\n\r\n        constructor(private $injector: ng.auto.IInjectorService) {\r\n            \r\n        }\r\n\r\n        public get = (options: any):any => {\r\n            \r\n            switch(options.interface) {\r\n            \r\n                case \"ICollectionManager\":\r\n                    if (options.filterFnNameOnVm && options.searchTermNameOnScope) {\r\n                        return (<IFilterableCollectionManager>this.$injector.get(\"virtualIndexedListView.filterableCollectionManager\")).createInstance({ items: options.items, scope: options.scope, searchTermNameOnScope: options.searchTermNameOnScope, filterFnNameOnVm: options.filterFnNameOnVm });\r\n                    } else if (options.dataService) {\r\n                        return (<ILazyLoadCollectionManager>this.$injector.get(\"virtualIndexedListView.lazyLoadCollectionManager\")).createInstance({ items: options.items, dataService: options.dataService });\r\n                    } else {\r\n                        return (<ICollectionManager>this.$injector.get(\"virtualIndexedListView.collectionManager\")).createInstance({ items: options.items });\r\n                    }\r\n\r\n                case \"IViewPort\":\r\n                    return (<IViewPort>this.$injector.get(\"virtualIndexedListView.viewPort\")).createInstance({ element: options.element });\r\n\r\n                case \"IContainer\":\r\n                    return (<IContainer>this.$injector.get(\"virtualIndexedListView.container\")).createInstance({ element: options.element });\r\n\r\n                case \"IRenderedNodes\":\r\n                    return (<IRenderedNodes>this.$injector.get(\"virtualIndexedListView.renderedNodes\")).createInstance({ container: options.container });\r\n\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    angular.module(\"virtualIndexedListView\").service(\"virtualIndexedListView.injector\", [\"$injector\",Injector]);\r\n}"],"sourceRoot":"/source/"}